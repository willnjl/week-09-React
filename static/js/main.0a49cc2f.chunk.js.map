{"version":3,"sources":["components/prebuilt/CatchMe.js","components/prebuilt/ProgressChallenge.js","components/prebuilt/Password.js","components/prebuilt/ListChallenge.js","components/prebuilt/Prebuilt.js","App.js","serviceWorker.js","index.js"],"names":["CatchMe","props","state","top","jump","moved","bind","this","move","setState","Button","onMouseEnter","className","style","Component","ProgressChallenge","val","handleClick","e","margin","width","now","onClick","Password","length","handleChange","input","currentTarget","value","colours","col","output","Form","Control","type","onChange","Alert","variant","colourSelect","transition","alertGen","ListChallenge","ListGroup","Prebuilt","Container","App","justifyContent","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a49cc2f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class CatchMe extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttop: 15,\n\t\t\tjump: 150,\n\t\t\tmoved: false,\n\t\t};\n\t\tthis.jump = this.jump.bind(this);\n\t}\n\n\tjump() {\n\t\tconst { top, jump, moved } = this.state;\n\t\tconst move = top + jump;\n\t\tthis.setState({ top: move });\n\t\tthis.setState({ moved: true });\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tonMouseEnter={this.jump}\n\t\t\t\tclassName=\"jumper btn btn-warning\"\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: this.state.top,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.state.moved ? \"hehehe\" : \"clickMe!\"}\n\t\t\t</Button>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Progress from \"react-bootstrap/ProgressBar\";\n\nexport default class ProgressChallenge extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tval: 0,\n\t\t};\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick(e) {\n\t\tthis.setState({\n\t\t\tval: this.state.val + 10,\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div style={{ margin: \"100px auto\", width: \"50%\" }}>\n\t\t\t\t<Progress now={this.state.val} />\n\t\t\t\t<Button onClick={(e) => this.handleClick(e)}>Progress</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\n\nexport default class Password extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tlength: 0,\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tlet input = e.currentTarget.value.length;\n\t\tthis.setState({\n\t\t\tlength: input,\n\t\t});\n\t}\n\n\tcolourSelect(length) {\n\t\tconst colours = [\"\", \"danger\", \"warning\", \"success\"];\n\t\tif (length >= 16) {\n\t\t\treturn colours[3];\n\t\t} else if (length < 16 && length > 9) {\n\t\t\treturn colours[2];\n\t\t} else if (length > 0) {\n\t\t\treturn colours[1];\n\t\t} else if (length === 0) {\n\t\t\treturn colours[0];\n\t\t}\n\t}\n\n\talertGen(col) {\n\t\tconst output = [\"\", \"Shit\", \"Awful\", \"Acceptable\"];\n\t\tif (col >= 16) {\n\t\t\treturn output[3];\n\t\t} else if (col < 16 && col > 9) {\n\t\t\treturn output[2];\n\t\t} else if (col > 0) {\n\t\t\treturn output[1];\n\t\t} else if (col === 0) {\n\t\t\treturn output[0];\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tstyle={{ width: \"18rem\", margin: \"auto\" }}\n\t\t\t\t\tonChange={(e) => this.handleChange(e)}\n\t\t\t\t/>\n\t\t\t\t<Alert\n\t\t\t\t\tvariant={this.colourSelect(this.state.length)}\n\t\t\t\t\ttransition={this.state.length === 0}\n\t\t\t\t>\n\t\t\t\t\t<p>Your Password is {this.alertGen(this.state.length)}</p>\n\t\t\t\t</Alert>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nexport default class ListChallenge extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ListGroup></ListGroup>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport CatchMe from \"./CatchMe\";\nimport ProgressChallenge from \"./ProgressChallenge\";\nimport Password from \"./Password\";\nimport ListChallenge from \"./ListChallenge\";\n\nexport default function Prebuilt() {\n\treturn (\n\t\t<Container>\n\t\t\t<Password />\n\t\t\t<CatchMe />\n\t\t\t<ProgressChallenge />\n\t\t\t<ListChallenge />\n\t\t</Container>\n\t);\n}\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import Header from \"./Header\";\n// // import logo from './logo.svg';\n// import Stuff from \"./components/Stuff\";\n// import Events from \"./components/events/Events\";\n// import Tricksy from \"./components/Tricksy\";\n// import Fade from \"./components/Fade\";\n// import EventsTricksy from \"./components/events/EventsTricksy\";\n// import LifeCycleChallenges from \"./components/lifecycle/LifeCycleChallenges\";\n// import Forms from \"./components/forms/Forms\";\n// import Routing from \"./components/Routing\";\nimport Prebuilt from \"./components/prebuilt/Prebuilt\";\nimport \"./App.css\";\n\nconst products = [\n\t{ name: \"Coffee\", price: 2.1 },\n\t{ name: \"Bananas\", price: 3.5 },\n\t{ name: \"Milk\", price: 250.65 },\n\t{ name: \"The Great Milk Shortage by Simon Schama\", price: 12.99 },\n];\n\nfunction App() {\n\treturn (\n\t\t<main>\n\t\t\t<div\n\t\t\t\tclassName=\"container\"\n\t\t\t\tstyle={{\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tmargin: \"auto\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{/* <Routing /> */}\n\n\t\t\t\t{/* <Tricksy /> */}\n\t\t\t\t{/* <Events /> */}\n\t\t\t\t{/* <EventsTricksy /> */}\n\t\t\t\t{/* <LifeCycleChallenges /> */}\n\t\t\t\t{/* <Forms /> */}\n\t\t\t\t<Prebuilt />\n\t\t\t</div>\n\t\t</main>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}